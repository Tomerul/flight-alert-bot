name: update-config-and-run

on:
  workflow_dispatch:
    inputs:
      origin:               { required: true,  type: string }
      destination:          { required: true,  type: string }
      adults:               { required: false, type: string, default: "2" }
      currency:             { required: false, type: string, default: "ILS" }
      depart_center_date:   { required: true,  type: string }
      depart_window_days:   { required: false, type: string, default: "0" }
      min_stay_days:        { required: false, type: string, default: "11" }
      max_stay_days:        { required: false, type: string, default: "14" }
      airline:              { required: false, type: string, default: "" }
      amadeus_env:          { required: false, type: string, default: "test" }

jobs:
  run:
    runs-on: ubuntu-latest
    env:
      AMADEUS_ENV: ${{ inputs.amadeus_env }}
      # גם כאן אותו מיפוי
      AMADEUS_CLIENT_ID: ${{ secrets.AMADEUS_API_KEY }}
      AMADEUS_CLIENT_SECRET: ${{ secrets.AMADEUS_API_SECRET }}
    steps:
      - uses: actions/checkout@v4

      - name: Debug env presence
        run: |
          python - << 'PY'
          import os
          print("AMADEUS_CLIENT_ID present:", bool(os.getenv("AMADEUS_CLIENT_ID")))
          print("AMADEUS_CLIENT_SECRET present:", bool(os.getenv("AMADEUS_CLIENT_SECRET")))
          print("AMADEUS_ENV:", os.getenv("AMADEUS_ENV"))
          PY

      - name: Update config.yaml from inputs
        run: |
          python - << 'PY'
          import yaml, os, json
          from pathlib import Path
          cfg_path = Path("config.yaml")
          with open(os.environ['GITHUB_EVENT_PATH'], 'r') as f:
            evt = json.load(f)
          inp = evt['inputs']
          cfg = {
            'currency': inp.get('currency','ILS'),
            'adults': int(inp.get('adults','2')),
            'route': {
              'origin': inp['origin'],
              'destination': inp['destination'],
              'depart_center_date': inp['depart_center_date'],
              'depart_window_days': int(inp.get('depart_window_days','0')),
              'min_stay_days': int(inp.get('min_stay_days','11')),
              'max_stay_days': int(inp.get('max_stay_days','14')),
              'airline': (inp.get('airline','') or '').strip()
            }
          }
          cfg_path.write_text(yaml.safe_dump(cfg, allow_unicode=True, sort_keys=False), encoding='utf-8')
          print("Wrote config.yaml")
          PY

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - run: pip install -r requirements.txt
      - run: python main.py
